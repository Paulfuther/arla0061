# coding: utf-8

"""
    DocuSign REST API

    The DocuSign REST API provides you with a powerful, convenient, and simple Web services API for interacting with DocuSign.  # noqa: E501

    OpenAPI spec version: v2.1
    Contact: devcenter@docusign.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from docusign_esign.client.configuration import Configuration


class ReportInProductGet(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'authentication_success_filter': 'str',
        'custom_field_filter': 'str',
        'date_range_custom_from_date': 'str',
        'date_range_custom_to_date': 'str',
        'date_range_filter': 'str',
        'display_order': 'str',
        'envelope_date_type_filter': 'str',
        'envelope_recipient_name_contains_filter': 'str',
        'envelope_status_filter': 'str',
        'envelope_subject_contains_filter': 'str',
        'fields': 'list[ReportInProductField]',
        'last_scheduled_execution_date': 'str',
        'last_scheduled_execution_success_date': 'str',
        'max_download_rows': 'str',
        'max_grid_rows': 'str',
        'max_scheduled_rows': 'str',
        'period_length_filter': 'str',
        'report_customized_id': 'str',
        'report_description': 'str',
        'report_id': 'str',
        'report_name': 'str',
        'report_type': 'str',
        'run_uri': 'str',
        'save_uri': 'str',
        'schedule_id': 'str',
        'sent_by_details': 'ReportInProductSentByDetails',
        'sent_by_filter': 'str',
        'sent_by_ids': 'str',
        'sort_field_direction': 'str',
        'sort_field_name': 'str',
        'verification_status_filter': 'str'
    }

    attribute_map = {
        'authentication_success_filter': 'authenticationSuccessFilter',
        'custom_field_filter': 'customFieldFilter',
        'date_range_custom_from_date': 'dateRangeCustomFromDate',
        'date_range_custom_to_date': 'dateRangeCustomToDate',
        'date_range_filter': 'dateRangeFilter',
        'display_order': 'displayOrder',
        'envelope_date_type_filter': 'envelopeDateTypeFilter',
        'envelope_recipient_name_contains_filter': 'envelopeRecipientNameContainsFilter',
        'envelope_status_filter': 'envelopeStatusFilter',
        'envelope_subject_contains_filter': 'envelopeSubjectContainsFilter',
        'fields': 'fields',
        'last_scheduled_execution_date': 'lastScheduledExecutionDate',
        'last_scheduled_execution_success_date': 'lastScheduledExecutionSuccessDate',
        'max_download_rows': 'maxDownloadRows',
        'max_grid_rows': 'maxGridRows',
        'max_scheduled_rows': 'maxScheduledRows',
        'period_length_filter': 'periodLengthFilter',
        'report_customized_id': 'reportCustomizedId',
        'report_description': 'reportDescription',
        'report_id': 'reportId',
        'report_name': 'reportName',
        'report_type': 'reportType',
        'run_uri': 'runUri',
        'save_uri': 'saveUri',
        'schedule_id': 'scheduleId',
        'sent_by_details': 'sentByDetails',
        'sent_by_filter': 'sentByFilter',
        'sent_by_ids': 'sentByIds',
        'sort_field_direction': 'sortFieldDirection',
        'sort_field_name': 'sortFieldName',
        'verification_status_filter': 'verificationStatusFilter'
    }

    def __init__(self, _configuration=None, **kwargs):  # noqa: E501
        """ReportInProductGet - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._authentication_success_filter = None
        self._custom_field_filter = None
        self._date_range_custom_from_date = None
        self._date_range_custom_to_date = None
        self._date_range_filter = None
        self._display_order = None
        self._envelope_date_type_filter = None
        self._envelope_recipient_name_contains_filter = None
        self._envelope_status_filter = None
        self._envelope_subject_contains_filter = None
        self._fields = None
        self._last_scheduled_execution_date = None
        self._last_scheduled_execution_success_date = None
        self._max_download_rows = None
        self._max_grid_rows = None
        self._max_scheduled_rows = None
        self._period_length_filter = None
        self._report_customized_id = None
        self._report_description = None
        self._report_id = None
        self._report_name = None
        self._report_type = None
        self._run_uri = None
        self._save_uri = None
        self._schedule_id = None
        self._sent_by_details = None
        self._sent_by_filter = None
        self._sent_by_ids = None
        self._sort_field_direction = None
        self._sort_field_name = None
        self._verification_status_filter = None
        self.discriminator = None

        setattr(self, "_{}".format('authentication_success_filter'), kwargs.get('authentication_success_filter', None))
        setattr(self, "_{}".format('custom_field_filter'), kwargs.get('custom_field_filter', None))
        setattr(self, "_{}".format('date_range_custom_from_date'), kwargs.get('date_range_custom_from_date', None))
        setattr(self, "_{}".format('date_range_custom_to_date'), kwargs.get('date_range_custom_to_date', None))
        setattr(self, "_{}".format('date_range_filter'), kwargs.get('date_range_filter', None))
        setattr(self, "_{}".format('display_order'), kwargs.get('display_order', None))
        setattr(self, "_{}".format('envelope_date_type_filter'), kwargs.get('envelope_date_type_filter', None))
        setattr(self, "_{}".format('envelope_recipient_name_contains_filter'), kwargs.get('envelope_recipient_name_contains_filter', None))
        setattr(self, "_{}".format('envelope_status_filter'), kwargs.get('envelope_status_filter', None))
        setattr(self, "_{}".format('envelope_subject_contains_filter'), kwargs.get('envelope_subject_contains_filter', None))
        setattr(self, "_{}".format('fields'), kwargs.get('fields', None))
        setattr(self, "_{}".format('last_scheduled_execution_date'), kwargs.get('last_scheduled_execution_date', None))
        setattr(self, "_{}".format('last_scheduled_execution_success_date'), kwargs.get('last_scheduled_execution_success_date', None))
        setattr(self, "_{}".format('max_download_rows'), kwargs.get('max_download_rows', None))
        setattr(self, "_{}".format('max_grid_rows'), kwargs.get('max_grid_rows', None))
        setattr(self, "_{}".format('max_scheduled_rows'), kwargs.get('max_scheduled_rows', None))
        setattr(self, "_{}".format('period_length_filter'), kwargs.get('period_length_filter', None))
        setattr(self, "_{}".format('report_customized_id'), kwargs.get('report_customized_id', None))
        setattr(self, "_{}".format('report_description'), kwargs.get('report_description', None))
        setattr(self, "_{}".format('report_id'), kwargs.get('report_id', None))
        setattr(self, "_{}".format('report_name'), kwargs.get('report_name', None))
        setattr(self, "_{}".format('report_type'), kwargs.get('report_type', None))
        setattr(self, "_{}".format('run_uri'), kwargs.get('run_uri', None))
        setattr(self, "_{}".format('save_uri'), kwargs.get('save_uri', None))
        setattr(self, "_{}".format('schedule_id'), kwargs.get('schedule_id', None))
        setattr(self, "_{}".format('sent_by_details'), kwargs.get('sent_by_details', None))
        setattr(self, "_{}".format('sent_by_filter'), kwargs.get('sent_by_filter', None))
        setattr(self, "_{}".format('sent_by_ids'), kwargs.get('sent_by_ids', None))
        setattr(self, "_{}".format('sort_field_direction'), kwargs.get('sort_field_direction', None))
        setattr(self, "_{}".format('sort_field_name'), kwargs.get('sort_field_name', None))
        setattr(self, "_{}".format('verification_status_filter'), kwargs.get('verification_status_filter', None))

    @property
    def authentication_success_filter(self):
        """Gets the authentication_success_filter of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The authentication_success_filter of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._authentication_success_filter

    @authentication_success_filter.setter
    def authentication_success_filter(self, authentication_success_filter):
        """Sets the authentication_success_filter of this ReportInProductGet.

          # noqa: E501

        :param authentication_success_filter: The authentication_success_filter of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._authentication_success_filter = authentication_success_filter

    @property
    def custom_field_filter(self):
        """Gets the custom_field_filter of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The custom_field_filter of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._custom_field_filter

    @custom_field_filter.setter
    def custom_field_filter(self, custom_field_filter):
        """Sets the custom_field_filter of this ReportInProductGet.

          # noqa: E501

        :param custom_field_filter: The custom_field_filter of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._custom_field_filter = custom_field_filter

    @property
    def date_range_custom_from_date(self):
        """Gets the date_range_custom_from_date of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The date_range_custom_from_date of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._date_range_custom_from_date

    @date_range_custom_from_date.setter
    def date_range_custom_from_date(self, date_range_custom_from_date):
        """Sets the date_range_custom_from_date of this ReportInProductGet.

          # noqa: E501

        :param date_range_custom_from_date: The date_range_custom_from_date of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._date_range_custom_from_date = date_range_custom_from_date

    @property
    def date_range_custom_to_date(self):
        """Gets the date_range_custom_to_date of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The date_range_custom_to_date of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._date_range_custom_to_date

    @date_range_custom_to_date.setter
    def date_range_custom_to_date(self, date_range_custom_to_date):
        """Sets the date_range_custom_to_date of this ReportInProductGet.

          # noqa: E501

        :param date_range_custom_to_date: The date_range_custom_to_date of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._date_range_custom_to_date = date_range_custom_to_date

    @property
    def date_range_filter(self):
        """Gets the date_range_filter of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The date_range_filter of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._date_range_filter

    @date_range_filter.setter
    def date_range_filter(self, date_range_filter):
        """Sets the date_range_filter of this ReportInProductGet.

          # noqa: E501

        :param date_range_filter: The date_range_filter of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._date_range_filter = date_range_filter

    @property
    def display_order(self):
        """Gets the display_order of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The display_order of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._display_order

    @display_order.setter
    def display_order(self, display_order):
        """Sets the display_order of this ReportInProductGet.

          # noqa: E501

        :param display_order: The display_order of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._display_order = display_order

    @property
    def envelope_date_type_filter(self):
        """Gets the envelope_date_type_filter of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The envelope_date_type_filter of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._envelope_date_type_filter

    @envelope_date_type_filter.setter
    def envelope_date_type_filter(self, envelope_date_type_filter):
        """Sets the envelope_date_type_filter of this ReportInProductGet.

          # noqa: E501

        :param envelope_date_type_filter: The envelope_date_type_filter of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._envelope_date_type_filter = envelope_date_type_filter

    @property
    def envelope_recipient_name_contains_filter(self):
        """Gets the envelope_recipient_name_contains_filter of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The envelope_recipient_name_contains_filter of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._envelope_recipient_name_contains_filter

    @envelope_recipient_name_contains_filter.setter
    def envelope_recipient_name_contains_filter(self, envelope_recipient_name_contains_filter):
        """Sets the envelope_recipient_name_contains_filter of this ReportInProductGet.

          # noqa: E501

        :param envelope_recipient_name_contains_filter: The envelope_recipient_name_contains_filter of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._envelope_recipient_name_contains_filter = envelope_recipient_name_contains_filter

    @property
    def envelope_status_filter(self):
        """Gets the envelope_status_filter of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The envelope_status_filter of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._envelope_status_filter

    @envelope_status_filter.setter
    def envelope_status_filter(self, envelope_status_filter):
        """Sets the envelope_status_filter of this ReportInProductGet.

          # noqa: E501

        :param envelope_status_filter: The envelope_status_filter of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._envelope_status_filter = envelope_status_filter

    @property
    def envelope_subject_contains_filter(self):
        """Gets the envelope_subject_contains_filter of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The envelope_subject_contains_filter of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._envelope_subject_contains_filter

    @envelope_subject_contains_filter.setter
    def envelope_subject_contains_filter(self, envelope_subject_contains_filter):
        """Sets the envelope_subject_contains_filter of this ReportInProductGet.

          # noqa: E501

        :param envelope_subject_contains_filter: The envelope_subject_contains_filter of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._envelope_subject_contains_filter = envelope_subject_contains_filter

    @property
    def fields(self):
        """Gets the fields of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The fields of this ReportInProductGet.  # noqa: E501
        :rtype: list[ReportInProductField]
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this ReportInProductGet.

          # noqa: E501

        :param fields: The fields of this ReportInProductGet.  # noqa: E501
        :type: list[ReportInProductField]
        """

        self._fields = fields

    @property
    def last_scheduled_execution_date(self):
        """Gets the last_scheduled_execution_date of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The last_scheduled_execution_date of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._last_scheduled_execution_date

    @last_scheduled_execution_date.setter
    def last_scheduled_execution_date(self, last_scheduled_execution_date):
        """Sets the last_scheduled_execution_date of this ReportInProductGet.

          # noqa: E501

        :param last_scheduled_execution_date: The last_scheduled_execution_date of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._last_scheduled_execution_date = last_scheduled_execution_date

    @property
    def last_scheduled_execution_success_date(self):
        """Gets the last_scheduled_execution_success_date of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The last_scheduled_execution_success_date of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._last_scheduled_execution_success_date

    @last_scheduled_execution_success_date.setter
    def last_scheduled_execution_success_date(self, last_scheduled_execution_success_date):
        """Sets the last_scheduled_execution_success_date of this ReportInProductGet.

          # noqa: E501

        :param last_scheduled_execution_success_date: The last_scheduled_execution_success_date of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._last_scheduled_execution_success_date = last_scheduled_execution_success_date

    @property
    def max_download_rows(self):
        """Gets the max_download_rows of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The max_download_rows of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._max_download_rows

    @max_download_rows.setter
    def max_download_rows(self, max_download_rows):
        """Sets the max_download_rows of this ReportInProductGet.

          # noqa: E501

        :param max_download_rows: The max_download_rows of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._max_download_rows = max_download_rows

    @property
    def max_grid_rows(self):
        """Gets the max_grid_rows of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The max_grid_rows of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._max_grid_rows

    @max_grid_rows.setter
    def max_grid_rows(self, max_grid_rows):
        """Sets the max_grid_rows of this ReportInProductGet.

          # noqa: E501

        :param max_grid_rows: The max_grid_rows of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._max_grid_rows = max_grid_rows

    @property
    def max_scheduled_rows(self):
        """Gets the max_scheduled_rows of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The max_scheduled_rows of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._max_scheduled_rows

    @max_scheduled_rows.setter
    def max_scheduled_rows(self, max_scheduled_rows):
        """Sets the max_scheduled_rows of this ReportInProductGet.

          # noqa: E501

        :param max_scheduled_rows: The max_scheduled_rows of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._max_scheduled_rows = max_scheduled_rows

    @property
    def period_length_filter(self):
        """Gets the period_length_filter of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The period_length_filter of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._period_length_filter

    @period_length_filter.setter
    def period_length_filter(self, period_length_filter):
        """Sets the period_length_filter of this ReportInProductGet.

          # noqa: E501

        :param period_length_filter: The period_length_filter of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._period_length_filter = period_length_filter

    @property
    def report_customized_id(self):
        """Gets the report_customized_id of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The report_customized_id of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._report_customized_id

    @report_customized_id.setter
    def report_customized_id(self, report_customized_id):
        """Sets the report_customized_id of this ReportInProductGet.

          # noqa: E501

        :param report_customized_id: The report_customized_id of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._report_customized_id = report_customized_id

    @property
    def report_description(self):
        """Gets the report_description of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The report_description of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._report_description

    @report_description.setter
    def report_description(self, report_description):
        """Sets the report_description of this ReportInProductGet.

          # noqa: E501

        :param report_description: The report_description of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._report_description = report_description

    @property
    def report_id(self):
        """Gets the report_id of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The report_id of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._report_id

    @report_id.setter
    def report_id(self, report_id):
        """Sets the report_id of this ReportInProductGet.

          # noqa: E501

        :param report_id: The report_id of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._report_id = report_id

    @property
    def report_name(self):
        """Gets the report_name of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The report_name of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._report_name

    @report_name.setter
    def report_name(self, report_name):
        """Sets the report_name of this ReportInProductGet.

          # noqa: E501

        :param report_name: The report_name of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._report_name = report_name

    @property
    def report_type(self):
        """Gets the report_type of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The report_type of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._report_type

    @report_type.setter
    def report_type(self, report_type):
        """Sets the report_type of this ReportInProductGet.

          # noqa: E501

        :param report_type: The report_type of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._report_type = report_type

    @property
    def run_uri(self):
        """Gets the run_uri of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The run_uri of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._run_uri

    @run_uri.setter
    def run_uri(self, run_uri):
        """Sets the run_uri of this ReportInProductGet.

          # noqa: E501

        :param run_uri: The run_uri of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._run_uri = run_uri

    @property
    def save_uri(self):
        """Gets the save_uri of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The save_uri of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._save_uri

    @save_uri.setter
    def save_uri(self, save_uri):
        """Sets the save_uri of this ReportInProductGet.

          # noqa: E501

        :param save_uri: The save_uri of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._save_uri = save_uri

    @property
    def schedule_id(self):
        """Gets the schedule_id of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The schedule_id of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._schedule_id

    @schedule_id.setter
    def schedule_id(self, schedule_id):
        """Sets the schedule_id of this ReportInProductGet.

          # noqa: E501

        :param schedule_id: The schedule_id of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._schedule_id = schedule_id

    @property
    def sent_by_details(self):
        """Gets the sent_by_details of this ReportInProductGet.  # noqa: E501


        :return: The sent_by_details of this ReportInProductGet.  # noqa: E501
        :rtype: ReportInProductSentByDetails
        """
        return self._sent_by_details

    @sent_by_details.setter
    def sent_by_details(self, sent_by_details):
        """Sets the sent_by_details of this ReportInProductGet.


        :param sent_by_details: The sent_by_details of this ReportInProductGet.  # noqa: E501
        :type: ReportInProductSentByDetails
        """

        self._sent_by_details = sent_by_details

    @property
    def sent_by_filter(self):
        """Gets the sent_by_filter of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The sent_by_filter of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._sent_by_filter

    @sent_by_filter.setter
    def sent_by_filter(self, sent_by_filter):
        """Sets the sent_by_filter of this ReportInProductGet.

          # noqa: E501

        :param sent_by_filter: The sent_by_filter of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._sent_by_filter = sent_by_filter

    @property
    def sent_by_ids(self):
        """Gets the sent_by_ids of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The sent_by_ids of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._sent_by_ids

    @sent_by_ids.setter
    def sent_by_ids(self, sent_by_ids):
        """Sets the sent_by_ids of this ReportInProductGet.

          # noqa: E501

        :param sent_by_ids: The sent_by_ids of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._sent_by_ids = sent_by_ids

    @property
    def sort_field_direction(self):
        """Gets the sort_field_direction of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The sort_field_direction of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._sort_field_direction

    @sort_field_direction.setter
    def sort_field_direction(self, sort_field_direction):
        """Sets the sort_field_direction of this ReportInProductGet.

          # noqa: E501

        :param sort_field_direction: The sort_field_direction of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._sort_field_direction = sort_field_direction

    @property
    def sort_field_name(self):
        """Gets the sort_field_name of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The sort_field_name of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._sort_field_name

    @sort_field_name.setter
    def sort_field_name(self, sort_field_name):
        """Sets the sort_field_name of this ReportInProductGet.

          # noqa: E501

        :param sort_field_name: The sort_field_name of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._sort_field_name = sort_field_name

    @property
    def verification_status_filter(self):
        """Gets the verification_status_filter of this ReportInProductGet.  # noqa: E501

          # noqa: E501

        :return: The verification_status_filter of this ReportInProductGet.  # noqa: E501
        :rtype: str
        """
        return self._verification_status_filter

    @verification_status_filter.setter
    def verification_status_filter(self, verification_status_filter):
        """Sets the verification_status_filter of this ReportInProductGet.

          # noqa: E501

        :param verification_status_filter: The verification_status_filter of this ReportInProductGet.  # noqa: E501
        :type: str
        """

        self._verification_status_filter = verification_status_filter

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ReportInProductGet, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ReportInProductGet):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ReportInProductGet):
            return True

        return self.to_dict() != other.to_dict()
